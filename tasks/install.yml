---
- name: Ensure Apt Cache Is up to Date (Apt)
  become: true
  apt:
    update_cache: true
    cache_valid_time: 360
  when:
    - ansible_os_family == 'Debian'

- name: Ensure Netdata Dependencies Are Present (General)
  become: true
  package:
    name: "{{ netdata_packages_general }}"
    state: present

- name: Ensure Netdata Dependencies Are Present (Apt)
  become: true
  apt:
    name: "{{ netdata_packages_apt }}"
    state: present
    update_cache: true
    cache_valid_time: 360
  when:
    - ansible_os_family == 'Debian'

- name: Ensure Netdata Dependencies Are Present (Dnf)
  become: true
  dnf:
    name: "{{ netdata_packages_dnf }}"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution == 'Fedora'

- name: Ensure Netdata Dependencies Are Present (Yum)
  become: true
  yum:
    name: "{{ netdata_packages_yum }}"
    state: present
    update_cache: true
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution == 'CentOS'

- name: Include Build Sequence of Installation Command
  include_tasks:
    file: install-cmd.yml

- name: Ensure Netdata Github Repo Is up to Date
  become: true
  git:
    repo: "{{ netdata_repo }}"
    dest: "{{ netdata_source_dir }}"
    version: "{{ netdata_repo_version }}"
    depth: 100

- name: Check for Existing Netdata Service
  become: true
  stat: path="{{ netdata_service_path }}"
  register: netdata_service

- name: Stop Netdata Service If Present
  become: true
  service: name=netdata state=stopped
  when: netdata_service.stat.exists

- name: Ensure Netdata Is Installed and up to Date
  become: true
  command: "{{ netdata_install_cmd }}"
  args:
    creates: /usr/sbin/netdata

- name: Include Configuration File
  include_tasks:
    file: config.yml
  notify: Restart and Enable Netdata